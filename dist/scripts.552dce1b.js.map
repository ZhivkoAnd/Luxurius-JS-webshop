{"version":3,"sources":["scripts/index.js"],"names":["WOW","init","$","click","animate","scrollTop","offset","top","logg","document","querySelector","addEventListener","e","modal","reg","log","panel","accountDetails","cart","setupUI","user","html","email","innerHTML","logout","style","display","getElementById","clothesRow","setupClothes","data","length","forEach","doc","clothes","col","imageURL","name","price","auth","onAuthStateChanged","db","collection","onSnapshot","snapshot","docs","err","console","message","signupForm","preventDefault","value","password","createUserWithEmailAndPassword","then","currentUser","reset","alert","signOut","loginForm","signInWithEmailAndPassword","cred"],"mappings":";CAAA,IAAIA,KAAMC,OAMVC,EAAE,WACEA,EAAE,gBAAgBC,MAAO,WAEhB,OADPD,EAAE,cAAcE,QAAQ,CAACC,UAAWH,EAAE,cAAcI,SAASC,KAAO,SAC7D,MAMX,IAAMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,QAAS,SAAAC,GAC3BV,EAAE,sBAAsBW,MAAM,UAGlC,IAAMC,EAAML,SAASC,cAAc,QACnCI,EAAIH,iBAAiB,QAAS,SAAAC,GAC1BV,EAAE,mBAAmBW,MAAM,UAMjC,IAAME,EAAMN,SAASC,cAAc,QAC7BM,EAAQP,SAASC,cAAc,UAC/BO,EAAiBR,SAASC,cAAc,aACxCQ,EAAOT,SAASC,cAAc,SAE9BS,EAAU,SAAAC,GACTA,GAAAA,EAAM,CAECC,IAAAA,EACAD,iBAAAA,OAAAA,EAAKE,MADX,cAGEL,EAAeM,UAAYF,EAE3BG,EAAOC,MAAMC,QAAU,QACvBX,EAAIU,MAAMC,QAAU,OACpBV,EAAMS,MAAMC,QAAU,QAClBjB,SAASkB,eAAe,UAC1BT,EAAKO,MAAMC,QAAU,cAMtBF,EAAOC,MAAMC,QAAU,OACvBX,EAAIU,MAAMC,QAAU,QACpBV,EAAMS,MAAMC,QAAU,OAClBjB,SAASkB,eAAe,UAC3BT,EAAKO,MAAMC,QAAU,SAoB3BE,EAAanB,SAASC,cAAc,eAEpCmB,EAAe,SAAAC,GAEbA,GAAAA,EAAKC,QAAUtB,SAASkB,eAAe,cAAe,CACtDN,IAAAA,EAAO,GACXS,EAAKE,QAAQ,SAAAC,GACHC,IAAAA,EAAUD,EAAIH,OACdK,EAMcD,iRAAAA,OAAAA,EAAQE,SAYYF,2fAAAA,OAAAA,EAAQG,KAMeH,yOAAAA,OAAAA,EAAQI,MAxBvE,o3BAyCDjB,GAAQc,IAGXP,EAAWL,UAAYF,IAiB3BkB,KAAKC,mBAAmB,SAAApB,GAKtBqB,GAAGC,WAAW,WAAWC,WAAW,SAAAC,GAEnCf,EAAae,EAASC,MACtB1B,EAAQC,IAER,SAAA0B,GACFC,QAAQhC,IAAI+B,EAAIE,aA0BjB,IAAMC,EAAaxC,SAASC,cAAc,gBAC1CuC,EAAWtC,iBAAiB,SAAU,SAAAC,GACpCA,EAAEsC,iBAKI5B,IAAAA,EAAQ2B,EAAW,gBAAgBE,MACnCC,EAAWH,EAAW,mBAAmBE,MAK/CZ,KAAKc,+BAA+B/B,EAAO8B,GAAUE,KAAM,SAAAC,GAGrDN,EAAWO,QACXT,QAAQhC,IAAI,0BACZb,EAAE,sBAAsBW,MAAM,QAC9B4C,MAAM,yCAQd,IAAMjC,EAASf,SAASC,cAAc,WAEtCc,EAAOb,iBAAiB,QAAS,SAAAC,GAC/BA,EAAEsC,iBAEFX,KAAKmB,UACLX,QAAQhC,IAAI,sBACZ0C,MAAM,yBAOR,IAAME,EAAYlD,SAASC,cAAc,eACzCiD,EAAUhD,iBAAiB,SAAU,SAAAC,GACnCA,EAAEsC,iBAEI5B,IAAAA,EAAQqC,EAAU,eAAeR,MACjCC,EAAWO,EAAU,kBAAkBR,MAE3CZ,KAAKqB,2BAA2BtC,EAAO8B,GAAUE,KAAM,SAAAO,GAEvDF,EAAUH,QACVT,QAAQhC,IAAI,qBACZb,EAAE,mBAAmBW,MAAM,QAC3B4C,MAAM","file":"scripts.552dce1b.js","sourceRoot":"..","sourcesContent":["new WOW().init();\r\n// const auth = firebase.auth();\r\n// const db = firebase.firestore();\r\n\r\n///////////////////////////////////// SCROLL DOWN BUTTON ///////////////////////////////////////////\r\n\r\n$(function() {\r\n    $('.scroll-down').click (function() {\r\n      $('html, body').animate({scrollTop: $('section.ok').offset().top }, 'slow');\r\n      return false;\r\n    });\r\n  });\r\n\r\n///////////////////////////////////// HIDE AND SHOW MODALS ///////////////////////////////////////////\r\n\r\n  const logg = document.querySelector(\"#logg\");\r\n  logg.addEventListener(\"click\", e => {\r\n      $('#modalRegisterForm').modal('hide');\r\n  });\r\n  \r\n  const reg = document.querySelector('#reg');\r\n  reg.addEventListener(\"click\", e => {\r\n      $('#modalLoginForm').modal('hide');\r\n  });\r\n\r\n\r\n///////////////////////////////////// DISPLAY UI IF THE USER IS LOGGED IN OR NOT ///////////////////////////////////////////\r\n\r\nconst log = document.querySelector('#log');\r\nconst panel = document.querySelector('#panel');\r\nconst accountDetails = document.querySelector('#username');\r\nconst cart = document.querySelector('#cart');\r\n\r\nconst setupUI = user => {\r\n    if(user) {\r\n        // Account info\r\n        const html = `\r\n            ${user.email}\r\n        `;\r\n          accountDetails.innerHTML = html;\r\n        //  signup.style.display = 'none';\r\n          logout.style.display = 'block';\r\n          log.style.display = 'none';\r\n          panel.style.display = 'block';\r\n          if (document.getElementById('cart')) {\r\n            cart.style.display = 'block';\r\n          }\r\n         \r\n        // addButton.style.display = 'block';\r\n    } else {\r\n      // hide account info\r\n           logout.style.display = 'none';\r\n           log.style.display = 'block';\r\n           panel.style.display = 'none';\r\n           if (document.getElementById('cart')) {\r\n            cart.style.display = 'none';\r\n          }\r\n    // //   addButton.style.display = 'none';\r\n    //   out.style.display = 'none';\r\n    //     reg.addEventListener('click', e => {\r\n    //       login.style.display = 'none';\r\n    //       signup.style.display = 'block';\r\n    //     });\r\n    //     log.addEventListener('click', e => {\r\n    //       login.style.display = 'block';\r\n    //       signup.style.display = 'none';\r\n    //     });\r\n      \r\n    }\r\n};\r\n\r\n\r\n\r\n///////////////////////////////////// DISPLAY THE CLOTHES LIST ///////////////////////////////////////////\r\n\r\nconst clothesRow = document.querySelector('#clothesrow');\r\n\r\nconst setupClothes = data => {\r\n\r\n    if (data.length && document.getElementById('clothesrow')) {\r\n    let html = '';\r\n    data.forEach(doc => {\r\n        const clothes = doc.data();\r\n        const col = `\r\n         <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <!-- Card -->\r\n            <div class=\"card card-cascade wider card-ecommerce\">\r\n              <!-- Card image -->\r\n              <div class=\"view view-cascade overlay\">\r\n                <img src=\"${clothes.imageURL}\" class=\"card-img-top\"\r\n                  alt=\"sample photo\">\r\n                <a>\r\n                  <div class=\"mask rgba-white-slight\"></div>\r\n                </a>\r\n              </div>\r\n              <!-- Card image -->\r\n              <!-- Card content -->\r\n              <div class=\"card-body card-body-cascade text-center pb-0\">\r\n                <!-- Title -->\r\n                <h5 class=\"card-title\">\r\n                  <strong>\r\n                    <a href=\"\" id='clothname'>${clothes.name}</a>\r\n                  </strong>\r\n                </h5>\r\n        \r\n                <!-- Card footer -->\r\n                <div class=\"card-footer mt-4\">\r\n                  <p class=\"float-left font-weight-bold mb-1 pb-2\">$ ${clothes.price}</p>\r\n                  <a class=\"float-right material-tooltip-main\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Add to Wishlist\">\r\n                    <i class=\"fas fa-heart grey-text ml-3\" id='hearthover'></i>\r\n                  </a>\r\n                  <a class=\"float-right material-tooltip-main\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Quick Look\">\r\n                    <i class=\"fas fa-eye grey-text ml-3\" id='eyehover'></i>\r\n                  </a>\r\n                  <a class=\"float-right material-tooltip-main\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Add to Cart\">\r\n                  <i class=\"fa fa-shopping-cart grey-text ml-2\" id='carthover'></i>\r\n                </a>\r\n                </div>\r\n              </div>\r\n              <!-- Card content -->\r\n            </div>\r\n            <!-- Card -->\r\n          </div>\r\n        `\r\n       html += col\r\n    });\r\n    \r\n    clothesRow.innerHTML = html;\r\n    }   \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n///////////////////////////////////// AUTHENTICATION STATUS ///////////////////////////////////////////\r\n\r\n\r\n\r\n// listen to auth status changes\r\n// Every time there is an auth change ( user logs in or logs out) the callback function will fire\r\nauth.onAuthStateChanged(user => {\r\n  // so if the user is logged in, do something, otherwise the user will not be logged in  \r\nif(user) {\r\n// get the data from the database\r\n// db.collection('guides').get().then(snapshot => { - Old non-real time listener            where(\"userId\", \"==\", user.uid)\r\n  db.collection('clothes').onSnapshot(snapshot => {\r\n//     // we are passing this data array of documents, so we can cycle through it in index.js\r\n   setupClothes(snapshot.docs);\r\n   setupUI(user);\r\n//     // when we use onShapshot, we add the error message as second parameter, and not as a catch method\r\n}, err => {\r\n console.log(err.message);\r\n});\r\n\r\n} else {\r\n  // setupUI(user);\r\n  // // if the user is not logged in, he will see an empty array without any data\r\n  // // setupTodos([]);\r\n  db.collection('clothes').onSnapshot(snapshot => {\r\n    //     // we are passing this data array of documents, so we can cycle through it in index.js\r\n       setupClothes(snapshot.docs);\r\n       setupUI(user);\r\n    //     // when we use onShapshot, we add the error message as second parameter, and not as a catch method\r\n    }, err => {\r\n     console.log(err.message);\r\n    });\r\n}\r\n});\r\n\r\n// Thing to notice - Firebase has automatic state persistence, so the user will be saved even upon refresh, like a local storage\r\n\r\n\r\n\r\n// ///////////////////////////////////// REGISTER THE USER ///////////////////////////////////////////\r\n\r\n\r\n\r\nconst signupForm = document.querySelector('#signup-form');\r\nsignupForm.addEventListener('submit', e => {\r\n  e.preventDefault();\r\n  \r\n  // get user info\r\n  // With the square brackets, we access the input fields id from the html\r\n  // finally we get the value of what the user wrote\r\n  const email = signupForm['signup-email'].value;\r\n  const password = signupForm['signup-password'].value;\r\n\r\n  // Sign up the user with those details\r\n  // This is an ASYNC task, so it will take some time to complete, so we add the then method\r\n  // The .then method will fire when task completes, so in this case, when we get the credentials.\r\n  auth.createUserWithEmailAndPassword(email, password).then( currentUser => {\r\n   // firebase.firestore().collection('users').doc(currentUser.uid).set(currentUser)\r\n        // we use return so we cn then use the .then method, then we use the doc method to match the uniq Id of the users that register on the document - match the users collection with auth user database\r\n        signupForm.reset();\r\n        console.log('New user is registered');\r\n        $('#modalRegisterForm').modal('hide');\r\n        alert('You have registered successfully!');\r\n      });    \r\n  });\r\n\r\n\r\n///////////////////////////////////// LOG OUT THE USER ///////////////////////////////////////////\r\n\r\n\r\nconst logout = document.querySelector('#logout');\r\n\r\nlogout.addEventListener('click', e => {\r\n  e.preventDefault();\r\n  // using the sign out method provided by FareStore\r\n  auth.signOut();\r\n  console.log('User is logged out');\r\n  alert('You have logged out');\r\n});\r\n\r\n\r\n///////////////////////////////////// LOG IN THE USER ///////////////////////////////////////////\r\n\r\n\r\nconst loginForm = document.querySelector('#login-form');\r\nloginForm.addEventListener('submit', e => {\r\n  e.preventDefault();\r\n  // Get the user info\r\n  const email = loginForm['login-email'].value;\r\n  const password = loginForm['login-password'].value;\r\n\r\n    auth.signInWithEmailAndPassword(email, password).then( cred => {\r\n   \r\n    loginForm.reset();\r\n    console.log('user is logged in');\r\n    $('#modalLoginForm').modal('hide');\r\n    alert('You have signed in successfully!');\r\n  });\r\n});\r\n\r\n\r\n// auth.createUserWithEmailAndPassword(email, password).then( cred => {\r\n//   return db.collection('users').doc(cred.user.uid).set({\r\n//     name: signupForm['listitem'].value\r\n//   });\r\n//    }).then(() => {\r\n// // we use return so we cn then use the .then method, then we use the doc method to match the uniq Id of the users that register on the document - match the users collection with auth user database\r\n// signupForm.reset();\r\n//    });    \r\n// });\r\n\r\n\r\n    \r\n    "]}